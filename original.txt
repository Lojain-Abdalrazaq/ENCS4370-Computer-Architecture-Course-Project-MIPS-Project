The original input sentence: "Hello From the other side!"

dictionary.txt:
0 We
1 '' 
2 Love
3 Arch
4 From
5 Computer
6 other
7 Hello
8 the
9 tool
A side
B mips
C !
---->The compressed file that need to be decompressed:
0x0007
0x0001
0x0004
0x0001
0x0008
0x0001
0x0006
0x0001
0x000A
0x000C
----> Now, in the decompression 
// so the solution summery is as the follwoing:
1- I want to load the content of the dict file into 1D array such 
______________________________________________________________________________________________TEMP DECODING CODE:
.data
dicttArray: .space 18           # intialzing the array with 256 size (approximation)
filename:   .asciiz "/Users/Ho182/Downloads/dictionary.txt"   # the compressed file path
buffer:     .space 64            # Buffer to store a single string

.text
.globl main
main:
	# filrstlt, we have to open dictionary file to save it into the array
	li $v0, 13               # system call to open the file
	la $a0, filename         # address of the string that contains the file path
	li $a1, 0                # for the flag
	li $a2, 0                # for the mode 
	syscall
	
	
read_dictionary_loop:	
	
	move $s0,$v0 # save the file descriptor in $s0
	li $v0, 14               # System call code for reading from a file
    	move $a0, $s0            # File descriptor to read from
   	la $a1, buffer           # Address of the buffer to store the string
	li $a2, 264               # 64 --> referes to the maximum number of characters to read (adjust as needed)
	syscall
	# Check if end of file or error occurred
   	#beqz $v0, done_reading   # If returned value = 0, end of file reached or error occurred
   	
   	# now, we want to store every string in oyr array -> dicttArray
   	la $t1, dicttArray         # Address of the array
   	addu $t1, $t1, $t0       # Calculating the destination address  --> the index of the out array to store the string in it
   	move $t2, $a1            # Copy the source address (buffer --> that we save every single string in it ) to $
   	sb $zero, ($t1)          # Store the null character at the beginning of the destination *******IDK WHY
   	
   	store_loop:
        lb $t3, ($t2)        # Load a character from the source
        sb $t3, 1($t1)       # Store the character in the destination (starting from offset 1)
        addiu $t1, $t1, 1    # Increment the destination address
        addiu $t2, $t2, 1    # Increment the source address
        bnez $t3, store_loop # Loop until null character encountered
    	addiu $t0, $t0, 4        # Increment the index by the string length
   	
   	# keep iteration in the loop until we finish all the content of the input file
   	j read_dictionary_loop
	
		
done_reading:
 	# Close the file to avoid any problem
        li $v0, 16               # System call code for closing a file
        move $a0, $s0            # File descriptor to close
        syscall
        ############################ HERE I WILL PRINT THE VALUE OF THE ARRAY TO MAKE SURE THE OPERATION DONE CORRECTELY*****
	j QuitProgram
	
# exiting the whole program   
QuitProgram:  
	li $v0, 10  # system call to exit the whole program
	syscall











